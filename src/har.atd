type message = {
	serviceToken: string;
	har: har;
}

type har = {
	log: log;
}

type log = {
	version: string;
	creator: creator;
	entries: entry list;
}

type name_value = {
	name: string;
	value: string;
}

type creator = {
	name: string;
	version: string;
}

type entry = {
	serverIPAddress: string;
	clientIPAddress: string;
	startedDateTime: string;
	time: int;
	request: request;
	response: response;
	timings: timings;
}

type content = {
	size: int;
	mimeType: string;
}

type request = {
	meth <json name="method">: string;
	url: string;
	httpVersion: string;
	queryString: name_value list;
	headers: name_value list;
	headersSize: int;
	bodySize: int;
	?content: content option;
}

type response = {
	status: int;
	statusText: string;
	httpVersion: string;
	headers: name_value list;
	headersSize: int;
	bodySize: int;
	?content: content option;
}

type timings = {
	send: int;
	wait: int;
	receive: int;
}
