type har = {
	version: string;
	serviceToken: string;
	creator: creator;
	entries: entry list;
}

type name_value = {
	name: string;
	value: string;
}

type creator = {
	name: string;
	version: string;
}

type entry = {
	startedDateTime: int;
	request: request;
	response: response;
	cache: cache;
	timings: timings;
}

type request = {
	meth <json name="method">: string;
	url: string;
	httpVersion: string;
	queryString: name_value list;
	headers: name_value list;
	headersSize: int;
	bodySize: int;
}

type response_content = {
	size: int;
	mimeType: string;
}

type response = {
	status: int;
	statusText: string;
	httpVersion: string;
	headers: name_value list;
	content: response_content;
	redirectUrl: string;
	headersSize: int;
	bodySize: int;
}

type cache = {
	?x: int option;
}

type timings = {
	send: int;
	wait: int;
	receive: int;
}